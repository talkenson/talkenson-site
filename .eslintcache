[{"E:\\Projects\\asites\\talkenson\\src\\index.js":"1","E:\\Projects\\asites\\talkenson\\src\\App.tsx":"2","E:\\Projects\\asites\\talkenson\\src\\reportWebVitals.js":"3","E:\\Projects\\asites\\talkenson\\src\\components\\heading\\Heading.tsx":"4","E:\\Projects\\asites\\talkenson\\src\\components\\projects\\Projects.tsx":"5"},{"size":494,"mtime":1609777016685,"results":"6","hashOfConfig":"7"},{"size":1301,"mtime":1609841930594,"results":"8","hashOfConfig":"7"},{"size":364,"mtime":1609772834851,"results":"9","hashOfConfig":"7"},{"size":4951,"mtime":1610051049897,"results":"10","hashOfConfig":"7"},{"size":324,"mtime":1609838355250,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1s0p33o",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"E:\\Projects\\asites\\talkenson\\src\\index.js",[],["28","29"],"E:\\Projects\\asites\\talkenson\\src\\App.tsx",["30"],"import React, { useEffect, useState } from 'react'\nimport styles from './App.module.scss'\nimport Heading from './components/heading/Heading'\nimport Projects from './components/projects/Projects'\nimport history from 'history/browser'\n\nconst urlPush = (newUrl: string) => {\n  history.push(newUrl)\n}\n\nconst urlGet = () => history.location.pathname\n\nconst Panes = ['/main', '/projects']\n\nconst App = () => {\n  const [activePane, setActivePane] = useState<number>(0)\n\n  useEffect(() => {\n\n    let getInd = Panes.findIndex((v) => v === urlGet())\n    if (getInd > 0) {\n      setActivePane(getInd)\n    } else {\n      setActivePane(0)\n    }\n  }, [])\n\n  useEffect(\n    () =>\n      history.listen(({ location, action }) => {\n        //console.log(urlGet(), Panes[activePane])\n        go(location.pathname)\n      }),\n    []\n  )\n\n  const go = (paneName: string) => {\n    let getInd = Panes.findIndex((v) => v === paneName)\n    if (getInd > 0) {\n      urlPush(Panes[getInd])\n    } else {\n      urlPush('')\n    }\n  }\n\n  return (\n    <div className={styles.app}>\n      {Panes[activePane] === '/main' ? <Heading go={go} /> : <></>}\n      {Panes[activePane] === '/projects' ? <Heading go={go} /> : <></>}\n      {/*Panes[activePane] === '/projects' ? <Projects go={go} /> : <></>*/}\n    </div>\n  )\n}\n\nexport default App\n",["31","32"],"E:\\Projects\\asites\\talkenson\\src\\reportWebVitals.js",[],"E:\\Projects\\asites\\talkenson\\src\\components\\heading\\Heading.tsx",["33"],"import React, { useState, useEffect } from 'react'\nimport styles from './Heading.module.scss'\nimport classNames from 'classnames'\n/*\nimport bg_develop from '../../static/svg/development.svg'\nimport bg_sense from '../../static/svg/sense.svg'\nimport bg_talks from '../../static/svg/talks.svg'\nimport bg_beard from '../../static/svg/beard.svg'\n*/\n\n/*\nconst DevelopLogo =\n  <img src={bg_develop} className={classNames(styles.bgPic, styles.develop)} />\n\n\nconst SenseLogo =\n  <img src={bg_sense} className={classNames(styles.bgPic, styles.sense)} />\n\n\nconst TalksLogo = () => (\n  <img src={bg_talks} className={classNames(styles.bgPic, styles.talks)} />\n)\n\nconst BeardLogo = () => (\n  <img src={bg_beard} className={classNames(styles.bgPic, styles.beard)} />\n)*/\n\nimport { ReactComponent as DevelopSVG } from '../../static/svg/development.svg'\nimport { ReactComponent as SenseSVG } from '../../static/svg/sense.svg'\nimport { ReactComponent as TalksSVG } from '../../static/svg/talks.svg'\nimport { ReactComponent as BeardSVG } from '../../static/svg/beard.svg'\n\nconst DevelopLogo = (\n  <DevelopSVG\n    className={classNames(styles.bgPic, styles.develop)}\n    preserveAspectRatio='xMinYMid meet'\n  />\n)\n\nconst SenseLogo = (\n  <SenseSVG\n    className={classNames(styles.bgPic, styles.sense)}\n    preserveAspectRatio='xMidYMid meet'\n  />\n)\n\nconst TalksLogo = (\n  <TalksSVG\n    className={classNames(styles.bgPic, styles.talks)}\n    preserveAspectRatio='xMaxYMid meet'\n  />\n)\n\nconst BeardLogo = (\n  <BeardSVG\n    className={classNames(styles.bgPic, styles.beard)}\n    preserveAspectRatio='xMinYMid meet'\n  />\n)\n\nconst subStrings = [\n  {\n    text: 'Natural Development',\n    pic: DevelopLogo,\n    class: styles.develop,\n    id: 'develop',\n  },\n  {\n    text: 'Natural Sense',\n    pic: SenseLogo,\n    class: styles.sense,\n    id: 'sense',\n  },\n  {\n    text: 'Natural Talks',\n    pic: TalksLogo,\n    class: styles.talks,\n    id: 'talks',\n  },\n  {\n    text: 'Natural Beard',\n    pic: BeardLogo,\n    class: styles.beard,\n    id: 'beard',\n  },\n]\n\nconst Heading = (props: { go: (paneName: string) => void }) => {\n  const [currentSub, setCurrentSub] = useState<number>(0)\n  const initialTimer = 5\n  const [currentCount, setCount] = useState(initialTimer)\n  const resetTimer = () => setCount(initialTimer)\n  const timer = () => setCount(currentCount - 1)\n\n  const [fadeEnabled, setFade] = useState(false)\n  const [cPic, setCPic] = useState<JSX.Element>(DevelopLogo)\n\n  useEffect(() => {\n    if (currentCount === 0) {\n      setCurrentSub((currentSub + 1) % subStrings.length)\n      resetTimer()\n    }\n    if (currentCount === 1) {\n      setFade(true)\n    }\n    if (currentCount === initialTimer - 1) {\n      setFade(false)\n    }\n    const id = setInterval(timer, 500)\n    return () => clearInterval(id)\n  }, [currentCount])\n\n  useEffect(() => {\n    setCPic(subStrings[currentSub].pic)\n  }, [currentSub])\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.talBrText}>\n        <div className={styles.socials}>\n          {/*<a\n            className={styles.socials_button}\n            onClick={() => props.go('/projects')}\n          >\n            <i className='fas fa-folder-open'></i>\n          </a>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          */}\n          <a\n            className={styles.socials_button}\n            href={'https://github.com/talkenson'}\n            target='_blank'\n            rel='noreferrer'\n          >\n            <i className='fab fa-github-alt'></i>\n          </a>\n          <a\n            className={styles.socials_button}\n            href={'https://vk.com/talkenson'}\n            target='_blank'\n            rel='noreferrer'\n          >\n            <i className='fab fa-vk'></i>\n          </a>\n          <a\n            className={styles.socials_button}\n            href={'https://twitter.com/talkenson_'}\n            target='_blank'\n            rel='noreferrer'\n          >\n            <i className='fab fa-twitter'></i>\n          </a>\n          <a\n            className={styles.socials_button}\n            href={'https://t.me/talkenson'}\n            target='_blank'\n            rel='noreferrer'\n          >\n            <i className='fab fa-telegram-plane'></i>\n          </a>\n          <a\n            className={styles.socials_button}\n            href={'mailto:me@talkenson.ru'}\n            target='_blank'\n            rel='noreferrer'\n          >\n            <i className='fas fa-at'></i>\n          </a>\n        </div>\n        <div className={styles.alphasign}>Î±</div>\n        Talkenson\n      </div>\n      <p\n        className={classNames(\n          styles.subText,\n          fadeEnabled ? styles.slideAnimation : ''\n        )}\n      >\n        {subStrings[currentSub].text}\n      </p>\n      <div\n        className={classNames(\n          styles.bgPicContainer,\n          fadeEnabled ? styles.picSlideAnimation : ''\n        )}\n      >\n        {cPic}\n      </div>\n    </div>\n  )\n}\n\nexport default Heading\n","E:\\Projects\\asites\\talkenson\\src\\components\\projects\\Projects.tsx",["34","35"],"import React, {useState, useEffect} from 'react'\nimport styles from './Projects.module.scss'\n\n\nconst Projects = () => {\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.talBrText}>\n        Talkenson\n      </div>\n    </div>\n  )\n}\n\nexport default Projects\n",["36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":16},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"46","severity":1,"message":"47","line":111,"column":6,"nodeType":"48","endLine":111,"endColumn":20,"suggestions":"49"},{"ruleId":"42","severity":1,"message":"50","line":1,"column":16,"nodeType":"44","messageId":"45","endLine":1,"endColumn":24},{"ruleId":"42","severity":1,"message":"51","line":1,"column":26,"nodeType":"44","messageId":"45","endLine":1,"endColumn":35},{"ruleId":"38","replacedBy":"52"},{"ruleId":"40","replacedBy":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"@typescript-eslint/no-unused-vars","'Projects' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentSub' and 'timer'. Either include them or remove the dependency array. You can also do a functional update 'setCurrentSub(c => ...)' if you only need 'currentSub' in the 'setCurrentSub' call.","ArrayExpression",["56"],"'useState' is defined but never used.","'useEffect' is defined but never used.",["54"],["55"],"no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [currentCount, currentSub, timer]",{"range":"59","text":"60"},[2786,2800],"[currentCount, currentSub, timer]"]